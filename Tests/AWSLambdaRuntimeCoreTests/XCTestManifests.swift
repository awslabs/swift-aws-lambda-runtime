//===----------------------------------------------------------------------===//
//
// This source file is part of the SwiftAWSLambdaRuntime open source project
//
// Copyright (c) 2020 Apple Inc. and the SwiftAWSLambdaRuntime project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of SwiftAWSLambdaRuntime project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

#if !canImport(ObjectiveC)
import XCTest

extension LambdaLifecycleTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LambdaLifecycleTest = [
        ("testLambdaResultIfShutsdownIsUnclean", testLambdaResultIfShutsdownIsUnclean),
        ("testShutdownFutureIsFulfilledWithStartUpError", testShutdownFutureIsFulfilledWithStartUpError),
        ("testShutdownIsCalledWhenLambdaShutsdown", testShutdownIsCalledWhenLambdaShutsdown),
    ]
}

extension LambdaRunnerTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LambdaRunnerTest = [
        ("testFailure", testFailure),
        ("testSuccess", testSuccess),
    ]
}

extension LambdaRuntimeClientTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LambdaRuntimeClientTest = [
        ("testBootstrapFailure", testBootstrapFailure),
        ("testErrorResponseToJSON", testErrorResponseToJSON),
        ("testFailure", testFailure),
        ("testGetInvocationServerInternalError", testGetInvocationServerInternalError),
        ("testGetInvocationServerMissingHeaderRequestIDError", testGetInvocationServerMissingHeaderRequestIDError),
        ("testGetInvocationServerNoBodyError", testGetInvocationServerNoBodyError),
        ("testInitializationErrorReport", testInitializationErrorReport),
        ("testInvocationErrorReport", testInvocationErrorReport),
        ("testInvocationSuccessResponse", testInvocationSuccessResponse),
        ("testProcessErrorInternalServerError", testProcessErrorInternalServerError),
        ("testProcessInitErrorOnBootstrapFailure", testProcessInitErrorOnBootstrapFailure),
        ("testProcessResponseInternalServerError", testProcessResponseInternalServerError),
        ("testSuccess", testSuccess),
    ]
}

extension LambdaTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LambdaTest = [
        ("testBigEvent", testBigEvent),
        ("testBootstrapFailure", testBootstrapFailure),
        ("testBootstrapFailure2", testBootstrapFailure2),
        ("testBootstrapFailureAndReportErrorFailure", testBootstrapFailureAndReportErrorFailure),
        ("testBootstrapOnce", testBootstrapOnce),
        ("testDeadline", testDeadline),
        ("testDisconnect", testDisconnect),
        ("testFailure", testFailure),
        ("testGetRemainingTime", testGetRemainingTime),
        ("testKeepAliveServer", testKeepAliveServer),
        ("testNoKeepAliveServer", testNoKeepAliveServer),
        ("testServerFailure", testServerFailure),
        ("testStartStopInDebugMode", testStartStopInDebugMode),
        ("testSuccess", testSuccess),
        ("testTimeout", testTimeout),
    ]
}

extension StringLambdaTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringLambdaTest = [
        ("testBootstrapFailure", testBootstrapFailure),
        ("testCallbackFailure", testCallbackFailure),
        ("testCallbackSuccess", testCallbackSuccess),
        ("testClosureFailure", testClosureFailure),
        ("testClosureSuccess", testClosureSuccess),
        ("testEventLoopFailure", testEventLoopFailure),
        ("testEventLoopSuccess", testEventLoopSuccess),
        ("testVoidCallbackSuccess", testVoidCallbackSuccess),
        ("testVoidClosureSuccess", testVoidClosureSuccess),
        ("testVoidEventLoopSuccess", testVoidEventLoopSuccess),
    ]
}

extension UtilsTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UtilsTest = [
        ("testGenerateXRayTraceID", testGenerateXRayTraceID),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(LambdaLifecycleTest.__allTests__LambdaLifecycleTest),
        testCase(LambdaRunnerTest.__allTests__LambdaRunnerTest),
        testCase(LambdaRuntimeClientTest.__allTests__LambdaRuntimeClientTest),
        testCase(LambdaTest.__allTests__LambdaTest),
        testCase(StringLambdaTest.__allTests__StringLambdaTest),
        testCase(UtilsTest.__allTests__UtilsTest),
    ]
}
#endif
